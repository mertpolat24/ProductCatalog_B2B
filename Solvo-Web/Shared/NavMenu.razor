@code {
    private string SelectedCategory { get; set; } = "";
    private string SelectedBrand { get; set; } = "";
    private decimal? MinPrice { get; set; }
    private decimal? MaxPrice { get; set; }
    private bool OnlyInStock { get; set; } = false;

    [Parameter]
    public EventCallback<FilterModel> OnFilterApplied { get; set; }

    private async Task ApplyFilters()
    {
        var filter = new FilterModel
            {
                Category = SelectedCategory,
                Brand = SelectedBrand,
                MinPrice = MinPrice,
                MaxPrice = MaxPrice,
                OnlyInStock = OnlyInStock
            };

        await OnFilterApplied.InvokeAsync(filter);
    }

    public class FilterModel
    {
        public string Category { get; set; } = "";
        public string Brand { get; set; } = "";
        public decimal? MinPrice { get; set; }
        public decimal? MaxPrice { get; set; }
        public bool OnlyInStock { get; set; }
    }
}
<nav class="navbar navbar-light bg-light p-3">
    <a class="navbar-brand" href="#">Ana Menü</a>

    <form class="d-flex align-items-center">

        <input class="form-control me-2" placeholder="Kategori" @bind="SelectedCategory" />

        <input class="form-control me-2" placeholder="Marka" @bind="SelectedBrand" />

        <input class="form-control me-2" type="number" placeholder="Min ₺" @bind="MinPrice" />

        <input class="form-control me-2" type="number" placeholder="Max ₺" @bind="MaxPrice" />

        <div class="form-check me-2">
            <input class="form-check-input" type="checkbox" @bind="OnlyInStock" id="onlyInStockCheck" />
            <label class="form-check-label" for="onlyInStockCheck">Stokta Olanlar</label>
        </div>
    </form>
</nav>
