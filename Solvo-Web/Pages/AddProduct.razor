@page "/add-product"
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.EntityFrameworkCore
@using Solvo_Core.Models
@using Solvo_Web.Data
@inject Solvo_Repository.Context.RepositoryContext DbContext
@inject NavigationManager NavManager
@inject AppState AppState
<style>
    .form-select {
        display: block;
        width: 100%;
        padding: 0.375rem 2.25rem 0.375rem 0.75rem;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.5;
        color: #212529;
        background-color: #fff;
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23343a40' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3e%3c/svg%3e");
        background-repeat: no-repeat;
        background-position: right 0.75rem center;
        background-size: 16px 12px;
        border: 1px solid #ced4da;
        border-radius: 0.25rem;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
        appearance: none;
    }

        .form-select:focus {
            border-color: #86b7fe;
            outline: 0;
            box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
        }
</style>
<h3 class="mb-4">Yeni Ürün Ekle</h3>
@if (!AppState.IsAdmin)
{
    NavManager.NavigateTo("/error", true);
}
else
{
<EditForm Model="product" OnValidSubmit="SaveProduct">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3 w-50">
        <label>Adı</label>
        <InputText class="form-control" @bind-Value="product.Name" />
    </div>

    <div class="mb-3 w-50">
        <label>Açıklama</label>
        <InputTextArea class="form-control" @bind-Value="product.Description" />
    </div>

    <div class="col-md-6">
        <label class="form-label">Görsel Seç</label>
        <InputFile OnChange="OnInputFileChange" class="form-control" />
        @if (!string.IsNullOrEmpty(product.ImagePath))
        {
            <div class="mt-2">
                <img src="@("/" + product.ImagePath)" alt="Ürün Görseli" width="150" />
            </div>
        }
    </div>

    <div class="mb-3 w-50">
        <label>Fiyat</label>
        <InputNumber class="form-control" @bind-Value="product.Price" />
    </div>

    <div class="mb-3 w-50">
        <label>Stok</label>
        <InputNumber class="form-control" @bind-Value="product.Stock" />
    </div>

    <div class="mb-3 w-50">
        <label>Kategori</label>
        <select class="form-select" @bind="product.CategoryId">
            <option value="">Kategori seç</option>
            @foreach (var cat in categories)
            {
                <option value="@cat.Id">@cat.Name</option>
            }
        </select>
    </div>

    <div class="mb-3 w-50">
        <label>Marka</label>
        <select class="form-select" @bind="product.BrandId">
            <option value="">Marka seç</option>
            @foreach (var br in brands)
            {
                <option value="@br.Id">@br.Name</option>
            }
        </select>
    </div>

    <button class="btn btn-success me-2" type="submit">Kaydet</button>
    <button type="button" class="btn btn-secondary" @onclick='() => NavManager.NavigateTo("/admin-products",true)'>İptal</button>
</EditForm>
}
@code {
    private Product product = new();
    private List<Category> categories = new();
    private List<Brand> brands = new();

    protected override void OnInitialized()
    {
        categories = DbContext.Categories.ToList();
        brands = DbContext.Brands.ToList();
    }

    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
        var file = e.File;
        var uploadsFolder = Path.Combine(Directory.GetCurrentDirectory(), "wwwroot", "images");

        if (!Directory.Exists(uploadsFolder))
            Directory.CreateDirectory(uploadsFolder);

        var filePath = Path.Combine(uploadsFolder, file.Name);

        using (var fileStream = new FileStream(filePath, FileMode.Create))
        {
            await file.OpenReadStream().CopyToAsync(fileStream);
        }

        product.ImagePath = "images/" + file.Name;
    }


    private void SaveProduct()
    {
        try
        {
            DbContext.Products.Add(product);
            DbContext.SaveChanges();

            AppState.LastMessage = "Ürün başarıyla eklendi!";
            AppState.LastMessageType = "success";

            NavManager.NavigateTo("/admin-products");
        }
        catch
        {
            AppState.LastMessage = "Ürün eklenirken hata oluştu!";
            AppState.LastMessageType = "error";

            NavManager.NavigateTo("/admin-products");
        }
    }
}
