@page "/login"
@using Solvo_Core.Models
@using Solvo_Service
@using Solvo_Service.Contracts
@using Solvo_Web.Data
@inject IUserService UserService
@inject NavigationManager NavManager
@inject AppState AppState

<style>
    .login-page {
        background-color: #f8f9fc;
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 20px;
        position: relative;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .back-button {
        position: absolute;
        top: 20px;
        left: 20px;
        border: 2px solid #3949ab;
        color: #3949ab;
        background: transparent;
        padding: 8px 14px;
        border-radius: 8px;
        font-weight: 600;
        cursor: pointer;
        transition: background 0.3s ease, color 0.3s ease;
        z-index: 10;
    }

        .back-button:hover {
            background: #3949ab;
            color: white;
        }

    .login-card {
        max-width: 500px;
        width: 100%;
        background: white;
        border-radius: 12px;
        box-shadow: 0 8px 20px rgb(0 0 0 / 0.15);
        padding: 40px 30px;
        text-align: center;
    }

        .login-card h2 {
            color: #3949ab;
            margin-bottom: 10px;
            font-weight: 700;
        }

        .login-card input.form-control {
            background: rgba(57, 73, 171, 0.1);
            border: 2px solid #3949ab;
            border-radius: 10px;
            color: #3949ab;
            font-size: 1.2rem;
            height: 50px;
            margin-bottom: 25px;
            text-align: center;
            transition: background 0.3s ease, border-color 0.3s ease;
        }

            .login-card input.form-control::placeholder {
                color: #3949ab99;
            }

            .login-card input.form-control:focus {
                background: rgba(57, 73, 171, 0.15);
                border-color: #1a237e;
                outline: none;
                box-shadow: 0 0 10px #1a237e88;
                color: #1a237e;
            }

    .btn-primary {
        background: #3949ab;
        border: none;
        padding: 14px 0;
        font-weight: 700;
        font-size: 1.1rem;
        border-radius: 10px;
        width: 100%;
        transition: background 0.3s ease;
    }

        .btn-primary:hover {
            background: #1a237e;
        }

    .alert-warning {
        background: #ff7043;
        color: white;
        border-radius: 8px;
        margin-bottom: 20px;
        font-weight: 600;
        padding: 10px;
    }
</style>


<div class="login-page">
    <button class="back-button" @onclick="GoBack">
        <i class="fas fa-arrow-left"></i> Geri Dön
    </button>

    <div class="login-card">
        <h2>Hoşgeldiniz</h2>

        @if (wrongAttempts > 0 && wrongAttempts < 4)
        {
            <div class="mb-3 text-danger fw-bold">Kalan deneme hakkınız: @(4 - wrongAttempts)</div>
        }

        @if (!string.IsNullOrEmpty(message))
        {
            <div class="alert alert-warning">@message</div>
        }

        <EditForm Model="user" OnValidSubmit="LoginUser">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <InputText @bind-Value="email" placeholder="E-Posta Adresi" class="form-control" />
            <InputText type="password" @bind-Value="password" placeholder="Şifre" class="form-control" />

            <button type="submit" class="btn btn-primary">
                Giriş Yap
            </button>
        </EditForm>
    </div>
</div>


@code {
    private User user = new User();
    private string email = string.Empty;
    private string password = string.Empty;
    private string message;
    private int wrongAttempts = 0;
    protected override async Task OnInitializedAsync()
    {
        if (AppState.IsAdmin)
        {
            await InvokeAsync(() => NavManager.NavigateTo("/"));
        }
    }


    private void LoginUser()
    {
        if (wrongAttempts <= 3)
        {
            bool result = UserService.PasswordSignIn(email, password);
            if (result)
            {
                AppState.IsAdmin = true;
                NavManager.NavigateTo("/", true);
                AppState.PageActive = false;
            }
            else
            {
                message = "E-posta veya şifre yanlış.";
                wrongAttempts += 1;
            }
        }
        else if (wrongAttempts > 3)
        {
            message = "Çok fazla yanlış giriş denemesi yaptınız. Lütfen daha sonra tekrar deneyin.";
            wrongAttempts += 1;
            if (wrongAttempts > 6)
                NavManager.NavigateTo("/", true);
        }


    }

    private void GoBack()
    {
        NavManager.NavigateTo("/", true);
    }
}
