@page "/add-product"
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.EntityFrameworkCore
@using Solvo_Core.Models
@using Solvo_Web.Data
@inject Solvo_Repository.Context.RepositoryContext DbContext
@inject NavigationManager NavManager

<h3 class="mb-4">Yeni Ürün Ekle</h3>

<EditForm Model="product" OnValidSubmit="SaveProduct">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3 w-50">
        <label>Adı</label>
        <InputText class="form-control" @bind-Value="product.Name" />
    </div>

    <div class="mb-3 w-50">
        <label>Açıklama</label>
        <InputTextArea class="form-control" @bind-Value="product.Description" />
    </div>

    <InputFile OnChange="OnInputFileChange" />
    <span>@product.ImagePath</span>

    <div class="mb-3 w-50">
        <label>Fiyat</label>
        <InputNumber class="form-control" @bind-Value="product.Price" />
    </div>

    <div class="mb-3 w-50">
        <label>Stok</label>
        <InputNumber class="form-control" @bind-Value="product.Stock" />
    </div>

    <div class="mb-3 w-50">
        <label>Kategori</label>
        <select class="form-select" @bind="product.CategoryId">
            <option value="">Kategori seç</option>
            @foreach (var cat in categories)
            {
                <option value="@cat.Id">@cat.Name</option>
            }
        </select>
    </div>

    <div class="mb-3 w-50">
        <label>Marka</label>
        <select class="form-select" @bind="product.BrandId">
            <option value="">Marka seç</option>
            @foreach (var br in brands)
            {
                <option value="@br.Id">@br.Name</option>
            }
        </select>
    </div>

    <button class="btn btn-success me-2" type="submit">Kaydet</button>
    <button type="button" class="btn btn-secondary" @onclick='() => NavManager.NavigateTo("/admin-products")'>İptal</button>
</EditForm>

@code {
    private Product product = new();
    private List<Category> categories = new();
    private List<Brand> brands = new();

    protected override void OnInitialized()
    {
        categories = DbContext.Categories.ToList();
        brands = DbContext.Brands.ToList();
    }

    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
        var file = e.File;
        var uploadsFolder = Path.Combine(Directory.GetCurrentDirectory(), "wwwroot", "images");

        if (!Directory.Exists(uploadsFolder))
            Directory.CreateDirectory(uploadsFolder);

        var filePath = Path.Combine(uploadsFolder, file.Name);

        using (var fileStream = new FileStream(filePath, FileMode.Create))
        {
            await file.OpenReadStream().CopyToAsync(fileStream);
        }

        product.ImagePath = "images/" + file.Name;
    }


    private void SaveProduct()
    {
        DbContext.Products.Add(product);
        DbContext.SaveChanges();
        NavManager.NavigateTo("/admin-products");
    }
}
